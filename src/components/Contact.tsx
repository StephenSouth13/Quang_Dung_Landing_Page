import { useState } from 'react'
import { useTranslation } from 'react-i18next'
import { useToast } from '@/hooks/use-toast'
import { Card } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Textarea } from '@/components/ui/textarea'
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select'
import { Send, CheckCircle, Phone, Mail, MapPin } from 'lucide-react'

const Contact = () => {
  const { t } = useTranslation()
  const { toast } = useToast()
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    course: '',
    message: ''
  })

  const courses = [
    'Ti·∫øng Nh·∫≠t c∆° b·∫£n (Pre-N5)',
    'Ti·∫øng Nh·∫≠t s∆° c·∫•p (N5)',
    'Ti·∫øng Nh·∫≠t trung c·∫•p (N4)',
    'Ti·∫øng Nh·∫≠t trung c·∫•p cao (N3)',
    'Luy·ªán thi JLPT N5',
    'Luy·ªán thi JLPT N4', 
    'Luy·ªán thi JLPT N3',
    'Ti·∫øng Nh·∫≠t qua Manga & Anime'
  ]

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)

    // Simulate form submission
    try {
      await new Promise(resolve => setTimeout(resolve, 2000))
      
      toast({
        title: "üéâ ƒêƒÉng k√Ω th√†nh c√¥ng!",
        description: t('contact.success'),
        duration: 5000,
      })

      // Reset form
      setFormData({
        name: '',
        email: '',
        phone: '',
        course: '',
        message: ''
      })
    } catch (error) {
      toast({
        title: "‚ùå C√≥ l·ªói x·∫£y ra",
        description: "Vui l√≤ng th·ª≠ l·∫°i sau ho·∫∑c li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ch√∫ng t√¥i.",
        variant: "destructive",
        duration: 5000,
      })
    } finally {
      setIsSubmitting(false)
    }
  }

  const contactInfo = [
    {
      icon: Phone,
      title: 'S·ªë ƒëi·ªán tho·∫°i',
      details: '+84 123 456 789',
      subtitle: 'Th·ªùi gian: 8:00 - 21:00 (T2-CN)'
    },
    {
      icon: Mail,
      title: 'Email',
      details: 'info@quangdungjapanese.com',
      subtitle: 'Ph·∫£n h·ªìi trong 24h'
    },
    {
      icon: MapPin,
      title: 'ƒê·ªãa ch·ªâ',
      details: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
      subtitle: 'G·∫ßn BV Ch·ª£ R·∫´y, d·ªÖ d√†ng di chuy·ªÉn'
    }
  ]

  return (
    <section id="contact" className="py-20 bg-gradient-to-br from-secondary/10 to-background">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16 animate-fade-in-up">
          <h2 className="text-4xl md:text-5xl font-bold mb-6 font-japanese">
            {t('contact.title')}
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            ƒêƒÉng k√Ω ngay ƒë·ªÉ nh·∫≠n t∆∞ v·∫•n mi·ªÖn ph√≠ v√† ∆∞u ƒë√£i ƒë·∫∑c bi·ªát
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
          {/* Contact Form */}
          <Card className="shadow-card animate-fade-in-up" style={{ animationDelay: '0.2s' }}>
            <div className="p-8">
              <div className="flex items-center space-x-3 mb-6">
                <div className="w-10 h-10 rounded-full bg-gradient-to-br from-sakura to-sunrise flex items-center justify-center">
                  <Send className="w-5 h-5 text-white" />
                </div>
                <h3 className="text-2xl font-bold">Form ƒëƒÉng k√Ω</h3>
              </div>

              <form onSubmit={handleSubmit} className="space-y-6">
                <div>
                  <Label htmlFor="name">{t('contact.name')} *</Label>
                  <Input
                    id="name"
                    type="text"
                    required
                    value={formData.name}
                    onChange={(e) => handleInputChange('name', e.target.value)}
                    className="mt-1 transition-smooth focus:ring-sakura focus:border-sakura"
                    placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                  />
                </div>

                <div>
                  <Label htmlFor="email">{t('contact.email')} *</Label>
                  <Input
                    id="email"
                    type="email"
                    required
                    value={formData.email}
                    onChange={(e) => handleInputChange('email', e.target.value)}
                    className="mt-1 transition-smooth focus:ring-sakura focus:border-sakura"
                    placeholder="your.email@example.com"
                  />
                </div>

                <div>
                  <Label htmlFor="phone">{t('contact.phone')} *</Label>
                  <Input
                    id="phone"
                    type="tel"
                    required
                    value={formData.phone}
                    onChange={(e) => handleInputChange('phone', e.target.value)}
                    className="mt-1 transition-smooth focus:ring-sakura focus:border-sakura"
                    placeholder="0123 456 789"
                  />
                </div>

                <div>
                  <Label htmlFor="course">{t('contact.course')} *</Label>
                  <Select required onValueChange={(value) => handleInputChange('course', value)}>
                    <SelectTrigger className="mt-1 transition-smooth focus:ring-sakura focus:border-sakura">
                      <SelectValue placeholder="Ch·ªçn kh√≥a h·ªçc b·∫°n quan t√¢m" />
                    </SelectTrigger>
                    <SelectContent>
                      {courses.map((course, index) => (
                        <SelectItem key={index} value={course}>
                          {course}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <Label htmlFor="message">Tin nh·∫Øn (t√πy ch·ªçn)</Label>
                  <Textarea
                    id="message"
                    value={formData.message}
                    onChange={(e) => handleInputChange('message', e.target.value)}
                    className="mt-1 transition-smooth focus:ring-sakura focus:border-sakura"
                    placeholder="Chia s·∫ª m·ª•c ti√™u h·ªçc t·∫≠p ho·∫∑c c√¢u h·ªèi c·ªßa b·∫°n..."
                    rows={4}
                  />
                </div>

                <Button
                  type="submit"
                  disabled={isSubmitting}
                  className="w-full sunrise-gradient hover:shadow-glow transition-smooth text-lg py-6"
                >
                  {isSubmitting ? (
                    <div className="flex items-center space-x-2">
                      <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                      <span>ƒêang g·ª≠i...</span>
                    </div>
                  ) : (
                    <div className="flex items-center space-x-2">
                      <CheckCircle className="w-5 h-5" />
                      <span>{t('contact.submit')}</span>
                    </div>
                  )}
                </Button>
              </form>
            </div>
          </Card>

          {/* Contact Information */}
          <div className="space-y-6 animate-fade-in-up" style={{ animationDelay: '0.4s' }}>
            <div className="mb-8">
              <h3 className="text-2xl font-bold mb-4">Th√¥ng tin li√™n h·ªá</h3>
              <p className="text-muted-foreground">
                Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ v√† t∆∞ v·∫•n cho b·∫°n b·∫•t c·ª© l√∫c n√†o
              </p>
            </div>

            {contactInfo.map((info, index) => (
              <Card key={index} className="p-6 shadow-card hover:shadow-glow transition-smooth group">
                <div className="flex items-start space-x-4">
                  <div className="w-12 h-12 rounded-full bg-gradient-to-br from-sakura to-sunrise flex items-center justify-center group-hover:scale-110 transition-transform">
                    <info.icon className="w-6 h-6 text-white" />
                  </div>
                  <div>
                    <h4 className="font-semibold mb-1 group-hover:text-sakura transition-colors">
                      {info.title}
                    </h4>
                    <p className="text-foreground font-medium">{info.details}</p>
                    <p className="text-sm text-muted-foreground mt-1">{info.subtitle}</p>
                  </div>
                </div>
              </Card>
            ))}

            {/* Social Links */}
            <Card className="p-6 shadow-card">
              <h4 className="font-semibold mb-4">K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i</h4>
              <div className="flex space-x-4">
                <a
                  href="#"
                  className="w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white hover:scale-110 transition-transform"
                >
                  <span className="text-sm font-bold">f</span>
                </a>
                <a
                  href="#"
                  className="w-10 h-10 rounded-full bg-red-500 flex items-center justify-center text-white hover:scale-110 transition-transform"
                >
                  <span className="text-sm font-bold">Y</span>
                </a>
                <a
                  href="#"
                  className="w-10 h-10 rounded-full bg-green-500 flex items-center justify-center text-white hover:scale-110 transition-transform"
                >
                  <span className="text-sm font-bold">Z</span>
                </a>
              </div>
            </Card>

            {/* Special Offer */}
            <Card className="p-6 shadow-card bg-gradient-to-r from-sakura/5 to-sunrise/5 border-sakura/20">
              <div className="text-center">
                <h4 className="text-lg font-bold text-sakura mb-2">üéâ ∆Øu ƒë√£i ƒë·∫∑c bi·ªát</h4>
                <p className="text-sm mb-3">
                  Gi·∫£m 20% h·ªçc ph√≠ cho 20 h·ªçc vi√™n ƒëƒÉng k√Ω ƒë·∫ßu ti√™n trong th√°ng n√†y
                </p>
                <p className="text-xs text-muted-foreground">
                  * √Åp d·ª•ng cho kh√≥a h·ªçc 3 th√°ng tr·ªü l√™n
                </p>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </section>
  )
}

export default Contact